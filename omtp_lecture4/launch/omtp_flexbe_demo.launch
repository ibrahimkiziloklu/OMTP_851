<?xml version="1.0"?>
<launch>
  <arg name="paused" default="false"/>
  <arg name="gazebo_gui" default="true"/>
  <arg name="gazebo_debug" default="false"/>

  <!-- ==================================================== -->
  <!-- Startup simulated world in Gazebo -->
  <!-- ==================================================== -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" default="$(find omtp_lecture4)/worlds/box_world.world"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="gui" value="$(arg gazebo_gui)"/>
    <arg name="debug" value="$(arg gazebo_debug)"/>
  </include>

  <!-- ==================================================== -->
  <!-- Load universal robot description format (URDF) -->
  <!-- ==================================================== -->
  <param name="robot_description" command="xacro  '$(find omtp_lecture4)/urdf/omtp_panda.urdf.xacro'"/>

  <!-- push robot_description to factory and spawn robot in gazebo at the origin, change x,y,z arguments to spawn in a different position -->
  <node name="spawn_gazebo_model"
        pkg="gazebo_ros"
        type="spawn_model"
        args="-urdf -param robot_description -model robot -x 0 -y 0 -z 0"
        respawn="false" output="screen" />

  <include file="$(find panda_v1)/launch/ros_controllers.launch"/>

  <!-- ==================================================== -->
  <!-- joint_state_publisher                                -->
  <!-- ==================================================== -->
  <!-- We do not have a robot connected, so publish fake joint states -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <rosparam param="source_list">[/panda/joint_states]</rosparam>
  </node>
  <node name="joint_state_desired_publisher" pkg="topic_tools" type="relay" args="joint_states joint_states_desired" />

  <!-- ==================================================== -->
  <!-- robot_state_publisher                                -->
  <!-- ==================================================== -->
  <!-- Given the published joint states, publish tf for the robot links -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

  <!-- ==================================================== -->
  <!-- MoveIt!                                               -->
  <!-- ==================================================== -->
  <!-- Run the main MoveIt! executable without trajectory execution (we do not have controllers configured by default) -->
  <include file="$(find panda_v1)/launch/move_group.launch">
    <!--arg name="load_robot_description" default="true" /--> <!-- We do not load the robot description, since it is done above -->
    <!--arg name="fake_execution" value="false"/-->
    <arg name="allow_trajectory_execution" value="true"/>
    
    <arg name="info" value="true"/>
  </include>

  <!-- ==================================================== -->
  <!-- Run Rviz and load the default config to see the state of the move_group node -->
  <!-- ==================================================== -->
  <include file="$(find panda_v1)/launch/moveit_rviz.launch">
    <arg name="rviz_config" value="$(find panda_v1)/launch/moveit.rviz"/>
  </include>
  
</launch>